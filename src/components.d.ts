/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  Sizes,
  Type,
  Variance,
} from './components/common/styles';
import {
  Align,
  Direction,
  Justify,
} from './components/common/flex';


export namespace Components {

  interface ShftButton {
    'class': string;
    'disabled': boolean;
    'size': Sizes;
    'type': Type;
    'variance': Variance;
  }
  interface ShftButtonAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'disabled'?: boolean;
    'size'?: Sizes;
    'type'?: Type;
    'variance'?: Variance;
  }

  interface ShftCard {
    'class': string;
  }
  interface ShftCardAttributes extends StencilHTMLAttributes {
    'class'?: string;
  }

  interface ShftCheckbox {
    'checked': boolean;
    'class': string;
    'disabled': boolean;
  }
  interface ShftCheckboxAttributes extends StencilHTMLAttributes {
    'checked'?: boolean;
    'class'?: string;
    'disabled'?: boolean;
  }

  interface ShftContainer {
    'class': string;
  }
  interface ShftContainerAttributes extends StencilHTMLAttributes {
    'class'?: string;
  }

  interface ShftDropdown {
    'alignSelf': Align;
    'class': string;
    'disabled': boolean;
    'flexGrow': number;
    'flexShrink': number;
    'justifySelf': Justify;
  }
  interface ShftDropdownAttributes extends StencilHTMLAttributes {
    'alignSelf'?: Align;
    'class'?: string;
    'disabled'?: boolean;
    'flexGrow'?: number;
    'flexShrink'?: number;
    'justifySelf'?: Justify;
  }

  interface ShftFlex {
    'alignContent': Align;
    'alignItems': Align;
    'alignSelf': Align;
    'class': string;
    'flexDirection': Direction;
    'inline': boolean;
    'justifyContent': Justify;
    'justifyItems': Justify;
    'justifySelf': Justify;
  }
  interface ShftFlexAttributes extends StencilHTMLAttributes {
    'alignContent'?: Align;
    'alignItems'?: Align;
    'alignSelf'?: Align;
    'class'?: string;
    'flexDirection'?: Direction;
    'inline'?: boolean;
    'justifyContent'?: Justify;
    'justifyItems'?: Justify;
    'justifySelf'?: Justify;
  }

  interface ShftTextbox {
    'class': string;
    'disabled': boolean;
    'multiline': boolean;
    'value': string;
  }
  interface ShftTextboxAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'disabled'?: boolean;
    'multiline'?: boolean;
    'value'?: string;
  }

  interface ShftRadio {
    'alignSelf': Align;
    'checked': boolean;
    'class': string;
    'disabled': boolean;
    'flexGrow': number;
    'flexShrink': number;
    'group': string;
    'justifySelf': Justify;
  }
  interface ShftRadioAttributes extends StencilHTMLAttributes {
    'alignSelf'?: Align;
    'checked'?: boolean;
    'class'?: string;
    'disabled'?: boolean;
    'flexGrow'?: number;
    'flexShrink'?: number;
    'group'?: string;
    'justifySelf'?: Justify;
  }

  interface ShftSlider {
    'class': string;
    'disabled': boolean;
    'tickIntervals': number;
  }
  interface ShftSliderAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'disabled'?: boolean;
    'tickIntervals'?: number;
  }

  interface ShftTab {
    'class': string;
    'disabled': boolean;
    'key': string;
  }
  interface ShftTabAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'disabled'?: boolean;
    'key'?: string;
  }

  interface ShftTabs {
    'class': string;
    'disabled': boolean;
    'setActiveTab': (key: string) => void;
  }
  interface ShftTabsAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'disabled'?: boolean;
  }

  interface ShftWindow {
    'class': string;
    'close': boolean;
    'disabled': boolean;
    'maximize': boolean;
    'minimize': boolean;
    'title': string;
  }
  interface ShftWindowAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'close'?: boolean;
    'disabled'?: boolean;
    'maximize'?: boolean;
    'minimize'?: boolean;
    'title'?: string;
  }

  interface DemoNav {}
  interface DemoNavAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'ShftButton': Components.ShftButton;
    'ShftCard': Components.ShftCard;
    'ShftCheckbox': Components.ShftCheckbox;
    'ShftContainer': Components.ShftContainer;
    'ShftDropdown': Components.ShftDropdown;
    'ShftFlex': Components.ShftFlex;
    'ShftTextbox': Components.ShftTextbox;
    'ShftRadio': Components.ShftRadio;
    'ShftSlider': Components.ShftSlider;
    'ShftTab': Components.ShftTab;
    'ShftTabs': Components.ShftTabs;
    'ShftWindow': Components.ShftWindow;
    'DemoNav': Components.DemoNav;
  }

  interface StencilIntrinsicElements {
    'shft-button': Components.ShftButtonAttributes;
    'shft-card': Components.ShftCardAttributes;
    'shft-checkbox': Components.ShftCheckboxAttributes;
    'shft-container': Components.ShftContainerAttributes;
    'shft-dropdown': Components.ShftDropdownAttributes;
    'shft-flex': Components.ShftFlexAttributes;
    'shft-textbox': Components.ShftTextboxAttributes;
    'shft-radio': Components.ShftRadioAttributes;
    'shft-slider': Components.ShftSliderAttributes;
    'shft-tab': Components.ShftTabAttributes;
    'shft-tabs': Components.ShftTabsAttributes;
    'shft-window': Components.ShftWindowAttributes;
    'demo-nav': Components.DemoNavAttributes;
  }


  interface HTMLShftButtonElement extends Components.ShftButton, HTMLStencilElement {}
  var HTMLShftButtonElement: {
    prototype: HTMLShftButtonElement;
    new (): HTMLShftButtonElement;
  };

  interface HTMLShftCardElement extends Components.ShftCard, HTMLStencilElement {}
  var HTMLShftCardElement: {
    prototype: HTMLShftCardElement;
    new (): HTMLShftCardElement;
  };

  interface HTMLShftCheckboxElement extends Components.ShftCheckbox, HTMLStencilElement {}
  var HTMLShftCheckboxElement: {
    prototype: HTMLShftCheckboxElement;
    new (): HTMLShftCheckboxElement;
  };

  interface HTMLShftContainerElement extends Components.ShftContainer, HTMLStencilElement {}
  var HTMLShftContainerElement: {
    prototype: HTMLShftContainerElement;
    new (): HTMLShftContainerElement;
  };

  interface HTMLShftDropdownElement extends Components.ShftDropdown, HTMLStencilElement {}
  var HTMLShftDropdownElement: {
    prototype: HTMLShftDropdownElement;
    new (): HTMLShftDropdownElement;
  };

  interface HTMLShftFlexElement extends Components.ShftFlex, HTMLStencilElement {}
  var HTMLShftFlexElement: {
    prototype: HTMLShftFlexElement;
    new (): HTMLShftFlexElement;
  };

  interface HTMLShftTextboxElement extends Components.ShftTextbox, HTMLStencilElement {}
  var HTMLShftTextboxElement: {
    prototype: HTMLShftTextboxElement;
    new (): HTMLShftTextboxElement;
  };

  interface HTMLShftRadioElement extends Components.ShftRadio, HTMLStencilElement {}
  var HTMLShftRadioElement: {
    prototype: HTMLShftRadioElement;
    new (): HTMLShftRadioElement;
  };

  interface HTMLShftSliderElement extends Components.ShftSlider, HTMLStencilElement {}
  var HTMLShftSliderElement: {
    prototype: HTMLShftSliderElement;
    new (): HTMLShftSliderElement;
  };

  interface HTMLShftTabElement extends Components.ShftTab, HTMLStencilElement {}
  var HTMLShftTabElement: {
    prototype: HTMLShftTabElement;
    new (): HTMLShftTabElement;
  };

  interface HTMLShftTabsElement extends Components.ShftTabs, HTMLStencilElement {}
  var HTMLShftTabsElement: {
    prototype: HTMLShftTabsElement;
    new (): HTMLShftTabsElement;
  };

  interface HTMLShftWindowElement extends Components.ShftWindow, HTMLStencilElement {}
  var HTMLShftWindowElement: {
    prototype: HTMLShftWindowElement;
    new (): HTMLShftWindowElement;
  };

  interface HTMLDemoNavElement extends Components.DemoNav, HTMLStencilElement {}
  var HTMLDemoNavElement: {
    prototype: HTMLDemoNavElement;
    new (): HTMLDemoNavElement;
  };

  interface HTMLElementTagNameMap {
    'shft-button': HTMLShftButtonElement
    'shft-card': HTMLShftCardElement
    'shft-checkbox': HTMLShftCheckboxElement
    'shft-container': HTMLShftContainerElement
    'shft-dropdown': HTMLShftDropdownElement
    'shft-flex': HTMLShftFlexElement
    'shft-textbox': HTMLShftTextboxElement
    'shft-radio': HTMLShftRadioElement
    'shft-slider': HTMLShftSliderElement
    'shft-tab': HTMLShftTabElement
    'shft-tabs': HTMLShftTabsElement
    'shft-window': HTMLShftWindowElement
    'demo-nav': HTMLDemoNavElement
  }

  interface ElementTagNameMap {
    'shft-button': HTMLShftButtonElement;
    'shft-card': HTMLShftCardElement;
    'shft-checkbox': HTMLShftCheckboxElement;
    'shft-container': HTMLShftContainerElement;
    'shft-dropdown': HTMLShftDropdownElement;
    'shft-flex': HTMLShftFlexElement;
    'shft-textbox': HTMLShftTextboxElement;
    'shft-radio': HTMLShftRadioElement;
    'shft-slider': HTMLShftSliderElement;
    'shft-tab': HTMLShftTabElement;
    'shft-tabs': HTMLShftTabsElement;
    'shft-window': HTMLShftWindowElement;
    'demo-nav': HTMLDemoNavElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
