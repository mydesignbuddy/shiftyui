/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Sizes,
  Type,
  Variance,
} from './components/common/styles';
import {
  Align,
  Direction,
  Justify,
} from './components/common/flex';

export namespace Components {
  interface AppRoot {}
  interface DemoButton {}
  interface DemoHome {}
  interface DemoNav {}
  interface PageNotFound {}
  interface ShftButton {
    'class': string;
    'disabled': boolean;
    'size': Sizes;
    'type': Type;
    'variance': Variance;
  }
  interface ShftCard {
    'class': string;
  }
  interface ShftCheckbox {
    'checked': boolean;
    'class': string;
    'disabled': boolean;
  }
  interface ShftContainer {
    'class': string;
  }
  interface ShftDropdown {
    'alignSelf': Align;
    'class': string;
    'disabled': boolean;
    'flexGrow': number;
    'flexShrink': number;
    'justifySelf': Justify;
  }
  interface ShftFlex {
    'alignContent': Align;
    'alignItems': Align;
    'alignSelf': Align;
    'class': string;
    'flexDirection': Direction;
    'inline': boolean;
    'justifyContent': Justify;
    'justifyItems': Justify;
    'justifySelf': Justify;
  }
  interface ShftRadio {
    'alignSelf': Align;
    'checked': boolean;
    'class': string;
    'disabled': boolean;
    'flexGrow': number;
    'flexShrink': number;
    'group': string;
    'justifySelf': Justify;
  }
  interface ShftSlider {
    'class': string;
    'disabled': boolean;
    'tickIntervals': number;
  }
  interface ShftTab {
    'class': string;
    'disabled': boolean;
    'key': string;
  }
  interface ShftTabs {
    'class': string;
    'disabled': boolean;
    'setActiveTab': (key: string) => Promise<void>;
  }
  interface ShftTextbox {
    'class': string;
    'disabled': boolean;
    'multiline': boolean;
    'value': string;
  }
  interface ShftWindow {
    'class': string;
    'close': boolean;
    'disabled': boolean;
    'maximize': boolean;
    'minimize': boolean;
    'title': string;
  }
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLDemoButtonElement extends Components.DemoButton, HTMLStencilElement {}
  var HTMLDemoButtonElement: {
    prototype: HTMLDemoButtonElement;
    new (): HTMLDemoButtonElement;
  };

  interface HTMLDemoHomeElement extends Components.DemoHome, HTMLStencilElement {}
  var HTMLDemoHomeElement: {
    prototype: HTMLDemoHomeElement;
    new (): HTMLDemoHomeElement;
  };

  interface HTMLDemoNavElement extends Components.DemoNav, HTMLStencilElement {}
  var HTMLDemoNavElement: {
    prototype: HTMLDemoNavElement;
    new (): HTMLDemoNavElement;
  };

  interface HTMLPageNotFoundElement extends Components.PageNotFound, HTMLStencilElement {}
  var HTMLPageNotFoundElement: {
    prototype: HTMLPageNotFoundElement;
    new (): HTMLPageNotFoundElement;
  };

  interface HTMLShftButtonElement extends Components.ShftButton, HTMLStencilElement {}
  var HTMLShftButtonElement: {
    prototype: HTMLShftButtonElement;
    new (): HTMLShftButtonElement;
  };

  interface HTMLShftCardElement extends Components.ShftCard, HTMLStencilElement {}
  var HTMLShftCardElement: {
    prototype: HTMLShftCardElement;
    new (): HTMLShftCardElement;
  };

  interface HTMLShftCheckboxElement extends Components.ShftCheckbox, HTMLStencilElement {}
  var HTMLShftCheckboxElement: {
    prototype: HTMLShftCheckboxElement;
    new (): HTMLShftCheckboxElement;
  };

  interface HTMLShftContainerElement extends Components.ShftContainer, HTMLStencilElement {}
  var HTMLShftContainerElement: {
    prototype: HTMLShftContainerElement;
    new (): HTMLShftContainerElement;
  };

  interface HTMLShftDropdownElement extends Components.ShftDropdown, HTMLStencilElement {}
  var HTMLShftDropdownElement: {
    prototype: HTMLShftDropdownElement;
    new (): HTMLShftDropdownElement;
  };

  interface HTMLShftFlexElement extends Components.ShftFlex, HTMLStencilElement {}
  var HTMLShftFlexElement: {
    prototype: HTMLShftFlexElement;
    new (): HTMLShftFlexElement;
  };

  interface HTMLShftRadioElement extends Components.ShftRadio, HTMLStencilElement {}
  var HTMLShftRadioElement: {
    prototype: HTMLShftRadioElement;
    new (): HTMLShftRadioElement;
  };

  interface HTMLShftSliderElement extends Components.ShftSlider, HTMLStencilElement {}
  var HTMLShftSliderElement: {
    prototype: HTMLShftSliderElement;
    new (): HTMLShftSliderElement;
  };

  interface HTMLShftTabElement extends Components.ShftTab, HTMLStencilElement {}
  var HTMLShftTabElement: {
    prototype: HTMLShftTabElement;
    new (): HTMLShftTabElement;
  };

  interface HTMLShftTabsElement extends Components.ShftTabs, HTMLStencilElement {}
  var HTMLShftTabsElement: {
    prototype: HTMLShftTabsElement;
    new (): HTMLShftTabsElement;
  };

  interface HTMLShftTextboxElement extends Components.ShftTextbox, HTMLStencilElement {}
  var HTMLShftTextboxElement: {
    prototype: HTMLShftTextboxElement;
    new (): HTMLShftTextboxElement;
  };

  interface HTMLShftWindowElement extends Components.ShftWindow, HTMLStencilElement {}
  var HTMLShftWindowElement: {
    prototype: HTMLShftWindowElement;
    new (): HTMLShftWindowElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'demo-button': HTMLDemoButtonElement;
    'demo-home': HTMLDemoHomeElement;
    'demo-nav': HTMLDemoNavElement;
    'page-not-found': HTMLPageNotFoundElement;
    'shft-button': HTMLShftButtonElement;
    'shft-card': HTMLShftCardElement;
    'shft-checkbox': HTMLShftCheckboxElement;
    'shft-container': HTMLShftContainerElement;
    'shft-dropdown': HTMLShftDropdownElement;
    'shft-flex': HTMLShftFlexElement;
    'shft-radio': HTMLShftRadioElement;
    'shft-slider': HTMLShftSliderElement;
    'shft-tab': HTMLShftTabElement;
    'shft-tabs': HTMLShftTabsElement;
    'shft-textbox': HTMLShftTextboxElement;
    'shft-window': HTMLShftWindowElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot {}
  interface DemoButton {}
  interface DemoHome {}
  interface DemoNav {}
  interface PageNotFound {}
  interface ShftButton {
    'class'?: string;
    'disabled'?: boolean;
    'size'?: Sizes;
    'type'?: Type;
    'variance'?: Variance;
  }
  interface ShftCard {
    'class'?: string;
  }
  interface ShftCheckbox {
    'checked'?: boolean;
    'class'?: string;
    'disabled'?: boolean;
  }
  interface ShftContainer {
    'class'?: string;
  }
  interface ShftDropdown {
    'alignSelf'?: Align;
    'class'?: string;
    'disabled'?: boolean;
    'flexGrow'?: number;
    'flexShrink'?: number;
    'justifySelf'?: Justify;
  }
  interface ShftFlex {
    'alignContent'?: Align;
    'alignItems'?: Align;
    'alignSelf'?: Align;
    'class'?: string;
    'flexDirection'?: Direction;
    'inline'?: boolean;
    'justifyContent'?: Justify;
    'justifyItems'?: Justify;
    'justifySelf'?: Justify;
  }
  interface ShftRadio {
    'alignSelf'?: Align;
    'checked'?: boolean;
    'class'?: string;
    'disabled'?: boolean;
    'flexGrow'?: number;
    'flexShrink'?: number;
    'group'?: string;
    'justifySelf'?: Justify;
  }
  interface ShftSlider {
    'class'?: string;
    'disabled'?: boolean;
    'tickIntervals'?: number;
  }
  interface ShftTab {
    'class'?: string;
    'disabled'?: boolean;
    'key'?: string;
  }
  interface ShftTabs {
    'class'?: string;
    'disabled'?: boolean;
  }
  interface ShftTextbox {
    'class'?: string;
    'disabled'?: boolean;
    'multiline'?: boolean;
    'value'?: string;
  }
  interface ShftWindow {
    'class'?: string;
    'close'?: boolean;
    'disabled'?: boolean;
    'maximize'?: boolean;
    'minimize'?: boolean;
    'title'?: string;
  }

  interface IntrinsicElements {
    'app-root': AppRoot;
    'demo-button': DemoButton;
    'demo-home': DemoHome;
    'demo-nav': DemoNav;
    'page-not-found': PageNotFound;
    'shft-button': ShftButton;
    'shft-card': ShftCard;
    'shft-checkbox': ShftCheckbox;
    'shft-container': ShftContainer;
    'shft-dropdown': ShftDropdown;
    'shft-flex': ShftFlex;
    'shft-radio': ShftRadio;
    'shft-slider': ShftSlider;
    'shft-tab': ShftTab;
    'shft-tabs': ShftTabs;
    'shft-textbox': ShftTextbox;
    'shft-window': ShftWindow;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'demo-button': LocalJSX.DemoButton & JSXBase.HTMLAttributes<HTMLDemoButtonElement>;
      'demo-home': LocalJSX.DemoHome & JSXBase.HTMLAttributes<HTMLDemoHomeElement>;
      'demo-nav': LocalJSX.DemoNav & JSXBase.HTMLAttributes<HTMLDemoNavElement>;
      'page-not-found': LocalJSX.PageNotFound & JSXBase.HTMLAttributes<HTMLPageNotFoundElement>;
      'shft-button': LocalJSX.ShftButton & JSXBase.HTMLAttributes<HTMLShftButtonElement>;
      'shft-card': LocalJSX.ShftCard & JSXBase.HTMLAttributes<HTMLShftCardElement>;
      'shft-checkbox': LocalJSX.ShftCheckbox & JSXBase.HTMLAttributes<HTMLShftCheckboxElement>;
      'shft-container': LocalJSX.ShftContainer & JSXBase.HTMLAttributes<HTMLShftContainerElement>;
      'shft-dropdown': LocalJSX.ShftDropdown & JSXBase.HTMLAttributes<HTMLShftDropdownElement>;
      'shft-flex': LocalJSX.ShftFlex & JSXBase.HTMLAttributes<HTMLShftFlexElement>;
      'shft-radio': LocalJSX.ShftRadio & JSXBase.HTMLAttributes<HTMLShftRadioElement>;
      'shft-slider': LocalJSX.ShftSlider & JSXBase.HTMLAttributes<HTMLShftSliderElement>;
      'shft-tab': LocalJSX.ShftTab & JSXBase.HTMLAttributes<HTMLShftTabElement>;
      'shft-tabs': LocalJSX.ShftTabs & JSXBase.HTMLAttributes<HTMLShftTabsElement>;
      'shft-textbox': LocalJSX.ShftTextbox & JSXBase.HTMLAttributes<HTMLShftTextboxElement>;
      'shft-window': LocalJSX.ShftWindow & JSXBase.HTMLAttributes<HTMLShftWindowElement>;
    }
  }
}


